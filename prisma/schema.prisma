generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Menus {
  id          String   @id @default(cuid())
  name        String
  description String
  image       String
  stocks      Int
  featured    String   @default("No")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  isArchive   Boolean  @default(false)

  categoryId String
  category   Categories @relation("MenuToCategory", fields: [categoryId], references: [id])

  variants Variants[] @relation("MenuToVariant")
  flavors  Flavors[]  @relation("MenuToFlavor")
  orders   Orders[]   @relation("OrderToMenu")

  @@index([categoryId])
}

model Variants {
  id        String   @id @default(cuid())
  name      String
  price     Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  menus Menus[] @relation("MenuToVariant")
}

model Flavors {
  id        String   @id @default(cuid())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  menus Menus[] @relation("MenuToFlavor")
}

model Categories {
  id        String   @id @default(cuid())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  menus Menus[] @relation("MenuToCategory")
}

model Orders {
  id             String   @id @default(cuid())
  name           String
  orderId        String
  userId         String
  contactNumber  String
  flavor         String
  productName    String
  variant        String
  totalPrice     Float
  quantity       Int
  paymentMethod  String
  proofOfPayment String
  status         String   @default("Pending")
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  isArchive      Boolean  @default(false)

  menuId String
  menu   Menus[] @relation("OrderToMenu")
}

model Ingredients {
  id        String   @id @default(cuid())
  name      String
  stocks    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  isArchive Boolean  @default(false)
}

model Message {
  id        String   @id @default(cuid())
  name      String
  email     String
  message   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  isArchive Boolean  @default(false)
}

model Promos {
  id          String   @id @default(cuid())
  name        String
  description String?
  image       String?
  code        String
  offSale     Float
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  isArchive   Boolean  @default(false)
}

model Admin {
  id        String   @id @default(cuid())
  email     String
  username  String
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model PaymentMethod {
  id        String   @id @default(cuid())
  name      String
  image     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
